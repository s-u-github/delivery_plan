<% provide(:title, "配送計画リスト") %>

  <!-- スマートフォン向けviewportの指定 -->
  <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
  <!-- Google Maps APIの読み込み -->
  <script type="text/javascript" src="//maps.google.com/maps/api/js?key=AIzaSyCVdA8BviehlgO1NcLlkMxtY4LOhRDC3pE"></script> 
  <!--<script async defer-->
  <!-- src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCVdA8BviehlgO1NcLlkMxtY4LOhRDC3pE&callback=initMap">-->
  <!--</script>-->
  
  
<script type="text/javascript">

  var latitude = gon.latitude;
  var longitude = gon.longitude;
  var articles = gon.articles
  var address = gon.address
  var title = gon.title
  var count = gon.count;
  var base = gon.base;
  
        $(function(){
            /* waypts（最大8か所） */
            var ary = [];
            for (var i = 1; i < count; i++) {
              ary.push(new google.maps.LatLng(latitude[i], longitude[i]))
              
            }
            var waypts=[];
            for (var i=0; i<ary.length; i++) {
                waypts.push({
                    location:ary[i],
                    stopover:true
                });
            }
            var renderFLG=false;
            var directionsDisplay;
            var directionsService=new google.maps.DirectionsService();
            var map,mode;
            var oldDirections=[];
            var currentDirections=null;
            var defaultStartSpot = new google.maps.LatLng(latitude[0], longitude[0]);
            var defaultEndSpot = new google.maps.LatLng(latitude[0], longitude[0]);
            var curStartSpot,curEndSpot;

            initialize();
  
  
             /* 地図初期化 */
            function initialize() {
                var myOptions={
                    zoom:10,
                    center: new google.maps.LatLng(base.latitude, base.longitude),//中心点
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                }
                /* 地図オブジェクト生成 */
                map=new google.maps.Map(document.getElementById("map_canvas"), myOptions);
                if(!renderFLG) render();
                // $("#roots").empty();
                // var s="";
                // for(var i=0; i<waypts.length; i++){
                //     if(i==0){
                //         start=base.title;
                //         end=waypts[i].location;
                //     }else if(i==(waypts.length-1)){
                //         start=waypts[i].location;
                //         end=base.title;
                //     }else{
                //         start=waypts[i].location;
                //         end=waypts[i+1].location;
                //     }
                //     s+="<li><a href='#' rel='"+start+"==>"+end+"'>"+start+"==>"+end+"</a></li>";
                // }
                // $("#roots").empty().append(s);
                curStartSpot=defaultStartSpot;
                curEndSpot=defaultEndSpot;
                calcRoute();
            }
              /* ルート検索結果を描画 */
            function render(){
                //dbg("render:"+renderFLG);
                renderFLG=true;
                /* ルートをレンダリング */
                directionsDisplay=new google.maps.DirectionsRenderer({
                    "map": map,
                    // "preserveViewport": true,
                    "draggable": false,
                    // "suppressMarkers": true // デフォルトのマーカーを削除
                });
                /* 右カラムにルート表示 */
                directionsDisplay.setPanel(document.getElementById("directions_panel"));
                /* 出発地点・到着地点マーカーが移動された時 */
                // google.maps.event.addListener(directionsDisplay, 'directions_changed',function() {
                //     currentDirections=directionsDisplay.getDirections();
                //     var route=currentDirections.routes[0];
                //     var s="";
                //     for(var i=0; i<route.legs.length; i++) {
                //         var routeSegment=i+1;
                //         s+=route.legs[i].start_address+'to';
                //         s+=route.legs[i].end_address+'\n';
                //         s+=route.legs[i].distance.text;
                //     }
                //     //dbg("directions_changed:"+s);
                // });
            }
            /* モード変更 */
            $("#mode").bind("change",function(){
                $(".button-group button").removeClass("active");
                calcRoute();
                $("#show").addClass("active");
            });
            
            /* 高速の有無 */
            $("#highway").bind("change",function(){
                $(".button-group button").removeClass("active");
                calcRoute();
                $("#show").addClass("active");
            });
            /* ルート算出 */
            function calcRoute(){
                switch($("#mode").val()){
                  case "driving":
                      mode=google.maps.DirectionsTravelMode.DRIVING;
                      break;
                  case "bicycling":
                      mode=google.maps.DirectionsTravelMode.BICYCLING;
                      break;
                  case "transit":
                      mode=google.maps.DirectionsTravelMode.TRANSIT;
                      break;
                  case "walking":
                      mode=google.maps.DirectionsTravelMode.WALKING;
                      break;
                }
                switch($("#highway").val()){
                  case "0":
                    flag = true;
                    break;
                  case "1":
                    flag = false;
                    break;
                }
                
                if(!renderFLG) render();
                if(curStartSpot==defaultStartSpot && curEndSpot==defaultEndSpot){
                    console.log("全ルート");
                    //全ルート
                    _waypts=waypts;
                }else{
                    //一部ルート
                    _waypts=[];
                }
                var request={
                    waypoints:_waypts,  // 経由地点(指定なしでも可)
                    optimizeWaypoints:true,  // 最適化を有効
                    avoidHighways:flag, // 高速は利用しない
                    origin:curStartSpot,        /* 出発地点 */
                    destination:curEndSpot,        /* 到着地点 */
                    travelMode:mode,        /* 交通手段 */
                };

                /* ルート描画 */
                directionsService.route(request, function(response, status) {
                    
                  if (status==google.maps.DirectionsStatus.OK) {
                    dbg(response);
                    directionsDisplay.setDirections(response);
                    calcRoute(response);
                  
                  
                  }else{
                      alert("その交通手段はリクエスト結果がありません\nstatus:"+status);
                  }
                    
                });
                
                function calcRoute(response){
                  var leg = []; // 経由address
                  var distance = []; // 距離
                  var duration = []; // 予測時間
                  for(var i=0; i<response.routes[0].legs.length; i++){
                    leg.push(response.routes[0].legs[i].start_address); // addressをpush
                    distance.push(response.routes[0].legs[i].distance.text); // 距離をpush
                    duration.push(response.routes[0].legs[i].duration.text); // 予測時間をpush
                    // new google.maps.Marker({position:response.routes[0].legs[i].start_location, map:map});
                  }

                  var alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".split("");
                  for(var i=0; i<response.routes[0].legs.length; i++){

                    if (i==0){
                      document.getElementById(`number${i}`).innerHTML = alphabet[response.routes[0].legs.length -1 + 1] + ":拠点";
                      document.getElementById(`next${i}`).innerHTML = alphabet[response.routes[0].legs.length -1 + 1] + '→' + alphabet[i+1];
                    }else{
                      document.getElementById(`number${i}`).innerHTML = alphabet[i];
                      document.getElementById(`next${i}`).innerHTML = alphabet[i] + '→' + alphabet[i+1];
                    }
                    document.getElementById(`leg${i}`).innerHTML = 
                      `<a target="_blank" href=
                      "https://www.google.com/maps/dir/?api=1&destination=${leg[i]}&travelmode=driving">${leg[i]}</a>`;
                    document.getElementById(`distance${i}`).innerHTML = distance[i];
                    document.getElementById(`duration${i}`).innerHTML = duration[i];
                  }
                  
                  // $(function(){
                  //   $.ajax ({
                  //     url: '/users/<%= params[:user_id] %>/articles/plan_list',
                  //     type: 'GET',
                  //     dataType: 'html',
                  //     async: true,
                  //     data: {
                  //       leg: leg
                  //     },
                  //     success : function(response){
                  //       alert('成功');
                  //   　},
                  //     error: function(){
                  //         //通信失敗時の処
                  //         alert('通信失敗');
                  //     }
                  //   });
                  // });
                }
                
                // $(function(){
                //   $.ajax ({
                //     url: '/users/1/articles/plan_list',
                //     type: 'GET',
                //     dataType: 'html',
                //     async: true,
                //     data: {
                //       st: st
                //     },
                //     success : function(response){
                //       alert('成功');
                //   　},
                //     error: function(){
                //         //通信失敗時の処
                //         alert('通信失敗');
                //     }
                //   });
                // });
                
                
            }
            // $("#roots").empty();
            // var s="";
            // for(var i=0; i<_waypts.length; i++){
            //     if(i==0){
            //         start=curStartSpot;
            //         end=_waypts[i].location;
            //     }else if(i==(_waypts.length-1)){
            //         start=_waypts[i].location;
            //         end=curEndSpot;
            //     }else{
            //         start=_waypts[i].location;
            //         end=_waypts[i+1].location;
            //     }
            //     s+="<li><a href='#' rel='"+start+"==>"+end+"'>"+start+"==>"+end+"</a></li>";
            // }
            // $("#roots").empty().append(s);
              /* 区間を選択した時 */
            // $("#roots").on("click","a",function(e){
            //     var rel=$(this).attr("rel").split("===");
            //     curStartSpot=rel[0];
            //     curEndSpot=rel[1];
            //     calcRoute();
            //     return false;
            // });
            /* ルート表示・非表示切り替え */
            $(".button-group button").click(function(e){
                $(".button-group button").removeClass("active");
                var id=$(this).attr("id");
                if(id=="show"){
                    calcRoute();
                    $(this).addClass("active");
                }else{
                    $(this).addClass("active");
                    reset();
                }
            });
            /* ルート削除 */
            function reset(){
                currentDirections=null;
                directionsDisplay.setMap(null);
                renderFLG=false;
            }
        });
         var dbg=function(str){
            try{
                if(window.console && console.log){
                    console.log(str);
                }
            }catch(err){
                //alert("error:"+err);
            }
        }
    
</script>
  
  
  <!--<body onload="initialize()">-->
  <body>
    <!-- 地図の埋め込み表示 -->
    <div id="map_canvas" style="width: 100%; height: 700px"></div>
    <!--<div id="route" style="width: 700px; height: 400px;overflow: scroll"></div>-->
  
        <div id="side">
        <div class="inner">
        <p>
            <label for="mode">モード：<select id="mode" name="mode">
                <option value="driving" selected>DRIVING（自動車）</option>
                <!--<option value="bicycling">BICYCLING （自転車）</option>-->
                <!--<option value="transit">TRANSIT（電車）</option>-->
                <option value="walking">WALKING（徒歩）</option>
            </select></label>
            <label for="highway">高速道路の有無：<select id="highway">
                <option value="0">高速使わない</option>
                <option value="1">高速使う</option>
            </select></label>
            
            <div class="daily_report">
              <button data-toggle="modal" data-target="#daily-modal" class="btn btn-success daily_report">納品時間</button>
                <%= render 'daily_time' %>
                <%= form_tag report_create_path, method: :patch do |f| %>
                  <%= submit_tag "日報作成", class: "btn btn-danger daily_report" %>
                <% end %>
            </div>
        </p>
        <!--<div class="button-group">-->
        <!--    <button id="show" class="button active">ルート表示</button>-->
        <!--    <button id="hide" class="button">ルート非表示</button>-->
        <!--</div>-->
        <!--<ol id="roots">-->
        <!--</ol>-->
        <!--<div id="directions_panel" style="width:100%"></div>-->
        </div>
        </div><!-- #side -->
        <!--<br clear="all" />-->
        
        <table class="table table-striped">
          <thead class="table-head">
            <tr style="text-align: center;">
              <th>マーカー</th>
              <th>行き先</th>
              <th colspan="2">距離</th>
              <th>予測時間</th>
            </tr>
          </thead>
          
          <tbody>
            <% i = 0 %>
            <% while i < @articles_count %>
            <tr>
              <th><div id=<%= "number#{i}" %>></th>
              <td><div id=<%= "leg#{i}" %>></div></td>
              <td><div id=<%= "next#{i}" %>></div></td>
              <td><div id=<%= "distance#{i}" %>></div></td>
              <td style="text-align: right;"><div id=<%= "duration#{i}" %>></div></td>
            </tr>
            <% i += 1 %>
            <% end %>
          </tbody>
        
        </table>
    

  </body>


